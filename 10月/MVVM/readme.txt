MVVM实现原理：
    主要通过编译模板compiler、数据劫持Observer（响应式数据）
    编译模板：
        编译元素节点--->找到带指令的元素节点
        编译文本节点--->找到带插值表达式的文本节点
        创建一个对象，处理不同指令的处理方法（更新数据、model指令的处理、text指令的处理）
    数据劫持：(把数据变成响应式的可以改变状态)Object.definedProperty
        get方法:得到数据时触发
        set方法：改变数据时触发
    Watcher:观察者模式(监控数据的状态)
        观察者、被观察者
        在更新元素数据和更新文本数据的方法中分别创建Watcher，获取的数据保存到get中
        创建一个Dep类储存所有的观察者
        在数据劫持的get方法中,当获取数据时，添加一个观察者到dep中
        当改变数据时，触发notify，执行Watcher中的updata更新数据
    通过proxyVm方法让vm代理vm.$data


